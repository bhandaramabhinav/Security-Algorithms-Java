import java.io.*;
import java.net.*;
import java.security.*;
import java.util.Base64;

import javax.crypto.*;
import javax.crypto.spec.SecretKeySpec;

public class CipherServer {
	public static void main(String[] args) throws Exception {
		int port = 8888;
		ServerSocket server = new ServerSocket(port);
		Socket s = server.accept();
		String filename = "Key.txt";
		// YOU NEED TO DO THESE STEPS:
		// -Read the key from the file generated by the client.
		// -Use the key to decrypt the incoming message from socket s.
		// -Print out the decrypt String to see if it matches the orignal
		// message.
		BufferedReader br = null;
		FileReader fr;
		String key = "";
		SecretKey privateKey=null;
		try {
			
			DataInputStream in = new DataInputStream(s.getInputStream());
			String cipeheredText=in.readUTF();
			fr = new FileReader(filename);
			br = new BufferedReader(fr);
			key = br.readLine();
			System.out.println(key);
			if (key != null) {
				byte[] privateKeyFromFile = Base64.getDecoder().decode(key);
				privateKey= new SecretKeySpec(privateKeyFromFile, 0, privateKeyFromFile.length, "DES"); 
			}
			Cipher objDCipher=Cipher.getInstance("DES");
			objDCipher.init(Cipher.DECRYPT_MODE, privateKey);
			byte[] bytesToDecipher=Base64.getDecoder().decode(cipeheredText);
			byte[] decipheredBytes=objDCipher.doFinal(bytesToDecipher);		
			String DecipheredText=new String(decipheredBytes,"UTF8");			
			System.out.println("De Ciphered Text:"+DecipheredText);
		} catch (Exception ex) {
			throw ex;
		} finally {
			br.close();

		}

	}

}